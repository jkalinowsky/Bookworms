{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kubak\\\\Projekty\\\\BookService\\\\client\\\\src\\\\ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const [profileData, setProfileData] = useState(null);\n  const [newDescription, setNewDescription] = useState('');\n  const [selectedImage, setSelectedImage] = useState(null);\n  useEffect(() => {\n    fetchProfileData();\n  }, []);\n  const fetchProfileData = () => {\n    fetch(\"/profile\", {\n      method: \"GET\",\n      credentials: \"include\"\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error('Failed to fetch profile data');\n      }\n      return res.json();\n    }).then(data => {\n      setProfileData(data);\n      setNewDescription(data.description); // Set initial value for the description input\n    }).catch(error => console.error('Error fetching profile data:', error));\n  };\n  const handleDescriptionChange = e => {\n    setNewDescription(e.target.value);\n  };\n  const handleImageChange = e => {\n    setSelectedImage(e.target.files[0]);\n  };\n  const handleSubmit = () => {\n    const formData = new FormData();\n    formData.append('description', newDescription);\n    if (selectedImage) {\n      formData.append('profilePicture', selectedImage);\n    }\n    fetch(\"http://localhost:5000/profile\", {\n      method: \"PUT\",\n      body: formData,\n      credentials: \"include\"\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error('Failed to update profile');\n      }\n      return res.json();\n    }).then(data => {\n      setProfileData(data); // Update profile data after successful update\n    }).catch(error => console.error('Error updating profile:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), profileData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5000/profile_uploads/${profileData.profilePicture}`,\n        alt: \"Profile\",\n        style: {\n          width: '100px',\n          height: '100px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: profileData.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newDescription,\n        onChange: handleDescriptionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfilePage, \"R0148sACZQGzajQemMp1eJE0ORU=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProfilePage","_s","profileData","setProfileData","newDescription","setNewDescription","selectedImage","setSelectedImage","fetchProfileData","fetch","method","credentials","then","res","ok","Error","json","data","description","catch","error","console","handleDescriptionChange","e","target","value","handleImageChange","files","handleSubmit","formData","FormData","append","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","profilePicture","alt","style","width","height","username","onChange","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kubak/Projekty/BookService/client/src/ProfilePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction ProfilePage() {\r\n    const [profileData, setProfileData] = useState(null);\r\n    const [newDescription, setNewDescription] = useState('');\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchProfileData();\r\n    }, []);\r\n\r\n    const fetchProfileData = () => {\r\n        fetch(\"/profile\", {\r\n            method: \"GET\",\r\n            credentials: \"include\",\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error('Failed to fetch profile data');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setProfileData(data);\r\n                setNewDescription(data.description); // Set initial value for the description input\r\n            })\r\n            .catch(error => console.error('Error fetching profile data:', error));\r\n    };\r\n\r\n    const handleDescriptionChange = (e) => {\r\n        setNewDescription(e.target.value);\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        setSelectedImage(e.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const formData = new FormData();\r\n        formData.append('description', newDescription);\r\n        if (selectedImage) {\r\n            formData.append('profilePicture', selectedImage);\r\n        }\r\n\r\n        fetch(\"http://localhost:5000/profile\", {\r\n            method: \"PUT\",\r\n            body: formData,\r\n            credentials: \"include\",\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error('Failed to update profile');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setProfileData(data); // Update profile data after successful update\r\n            })\r\n            .catch(error => console.error('Error updating profile:', error));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>My Profile</h2>\r\n            {profileData && (\r\n                <div>\r\n                    <img src={`http://localhost:5000/profile_uploads/${profileData.profilePicture}`} alt=\"Profile\"\r\n                         style={{ width: '100px', height: '100px' }} />\r\n                    <h3>{profileData.username}</h3>\r\n                    <textarea value={newDescription} onChange={handleDescriptionChange}></textarea>\r\n                    <input type=\"file\" onChange={handleImageChange} />\r\n                    <button onClick={handleSubmit}>Save Changes</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}